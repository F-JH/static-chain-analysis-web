<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analysis.admin.Mapper.CredentialInfoMapper">
    <resultMap id="CredentialInfo" type="com.analysis.admin.Pojo.Entities.CredentialInfo">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="passphrase" property="passphrase" jdbcType="VARCHAR" />
        <result column="public_key" property="publicKey" jdbcType="VARCHAR" />
        <result column="private_key" property="privateKey" jdbcType="VARCHAR" />
        <result column="is_delete" property="isDelete" jdbcType="BOOLEAN" />
    </resultMap>

    <select id="getCredentialInfoList" resultType="com.analysis.admin.Pojo.Entities.CredentialInfo">
        select
            id, name, username, password, passphrase, public_key, private_key, is_delete
        from
            credential_info
        where
            is_delete = 0
    </select>

    <select id="searchCredentialInfoList" resultType="com.analysis.admin.Pojo.Entities.CredentialInfo">
        select
            id, name, username, password, passphrase, public_key, private_key, is_delete
        from
            credential_info
        where
            is_delete = 0
            and locate(#{key}, name) > 0
    </select>

    <select id="getCredentialInfo" resultType="com.analysis.admin.Pojo.Entities.CredentialInfo">
        select id, name, username, password, passphrase, public_key, private_key, is_delete from credential_info where id = #{id}
    </select>

    <insert id="addCredentialInfo" parameterType="com.analysis.admin.Pojo.Entities.CredentialInfo">
        insert into credential_info (name, username, password, public_key, private_key, passphrase)
        values (#{info.name}, #{info.username}, #{info.password}, #{info.publicKey}, #{info.privateKey}, #{info.passphrase})
    </insert>

    <update id="editCredentialInfo" parameterType="com.analysis.admin.Pojo.Entities.CredentialInfo">
        update credential_info
        set
            name = #{info.name},
            username = #{info.username},
            password = #{info.password},
            public_key = #{info.publicKey},
            private_key = #{info.privateKey},
            passphrase = #{info.passphrase}
        where
            id = #{info.id}
    </update>

    <delete id="deleteCredentialInfo" parameterType="java.lang.Integer">
        delete from credential_info where id = #{id}
    </delete>

    <select id="getCredentialByNodeId" resultMap="CredentialInfo">
        select
            t1.id, t1.name, t1.username, t1.password, t1.passphrase, t1.public_key, t1.private_key, t1.is_delete
        from
            credential_info t1 left join file_tree_info t2 on t2.credential_id = t1.id
        where
            t2.node_id = #{nodeId};
    </select>
</mapper>
