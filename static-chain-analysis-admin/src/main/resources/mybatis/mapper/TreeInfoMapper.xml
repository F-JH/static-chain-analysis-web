<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hsf.admin.Mapper.TreeInfoMapper">
    <resultMap id="TreeInfo" type="com.hsf.admin.Pojo.Entities.TreeInfo">
        <id column="node_id" property="nodeId" jdbcType="INTEGER" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="lft" property="lft" jdbcType="INTEGER" />
        <result column="rgt" property="rgt" jdbcType="INTEGER" />
        <result column="is_directory" property="isDirectory" jdbcType="BOOLEAN" />
        <result column="git_url" property="gitUrl" jdbcType="VARCHAR" />
        <result column="credential_id" property="credentialId" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
    </resultMap>

    <select id="getTreeInfo" resultType="com.hsf.admin.Pojo.Entities.TreeInfo">
        select
            node_id, parent_id, name, lft, rgt, is_directory, git_url, credential_id, status
        from
            file_tree_info
        order by lft asc
    </select>

    <select id="isDirectory" resultType="java.lang.Boolean">
        select is_directory from file_tree_info where node_id = #{nodeId}
    </select>

<!--    添加节点-->
    <insert id="addNode" parameterType="com.hsf.admin.Pojo.Requests.GitInfoRequest" useGeneratedKeys="true">
        <if test="!node.tree.isDirectory">
            select @nodeLft := rgt from file_tree_info where node_id = #{node.tree.parentId};
        </if>
        <if test="node.tree.isDirectory">
            select @nodeLft := lft from file_tree_info where node_id = #{node.tree.parentId};
        </if>
        update file_tree_info set rgt = rgt + 2 where rgt >= @nodeLft;
        update file_tree_info set lft = lft + 2 where lft > @nodeLft;
        insert into file_tree_info (parent_id, name, lft, rgt, git_url, credential_id, is_directory)
        <if test="!node.tree.isDirectory">
            values (#{node.tree.parentId}, #{node.name}, @nodeLft, @nodeLft + 1, #{node.gitUrl}, #{node.credentialsProviderId}, #{node.tree.isDirectory});
        </if>
        <if test="node.tree.isDirectory">
            values (#{node.tree.parentId}, #{node.name}, @nodeLft + 1, @nodeLft + 2, #{node.gitUrl}, #{node.credentialsProviderId}, #{node.tree.isDirectory});
        </if>
        <selectKey resultType="java.lang.Integer" keyProperty="result.nodeId" order="AFTER">
            select LAST_INSERT_ID();
        </selectKey>
    </insert>

    <insert id="addNodeV2" parameterType="com.hsf.admin.Pojo.Requests.GitInfoRequest" useGeneratedKeys="true">
        <if test="node.tree.isDirectory">
            select
                @nodeLft := ifnull(lft, rgt)
            from (
                select
                    t1.rgt, t2.lft
                from
                    file_tree_info t1 left join (
                        select lft, parent_id from file_tree_info where parent_id = #{node.tree.parentId} and is_directory = 0
                    ) t2 on t1.node_id = t2.parent_id
                where
                    t1.node_id = #{node.tree.parentId}
                order by t2.lft
                limit 1
            ) f;
            update file_tree_info set lft = lft + 2 where lft >= @nodeLft;
            update file_tree_info set rgt = rgt + 2 where rgt >= @nodeLft;
        </if>
        <if test="!node.tree.isDirectory">
            select @nodeLft := rgt from file_tree_info where node_id = #{node.tree.parentId};
            update file_tree_info set rgt = rgt + 2 where rgt >= @nodeLft;
            update file_tree_info set lft = lft + 2 where lft > @nodeLft;
        </if>
        insert into file_tree_info (parent_id, name, lft, rgt, git_url, credential_id, is_directory)
        values (#{node.tree.parentId}, #{node.name}, @nodeLft, @nodeLft + 1, #{node.gitUrl}, #{node.credentialsProviderId}, #{node.tree.isDirectory});
        <selectKey resultType="java.lang.Integer" keyProperty="result.nodeId" order="AFTER">
            select LAST_INSERT_ID();
        </selectKey>
    </insert>

<!--    删除节点，子节点一起删除-->
    <delete id="deleteNode" parameterType="java.lang.Integer">
        select @nodeLft := lft, @nodeRgt := rgt from file_tree_info where node_id = #{nodeId};
        delete from file_tree_info where lft >= @nodeLft and rgt &lt;= @nodeRgt;
        update file_tree_info set lft = lft - @nodeRgt + @nodeLft - 1 where lft > @nodeRgt;
        update file_tree_info set rgt = rgt - @nodeRgt + @nodeLft - 1 where rgt > @nodeRgt;
    </delete>
</mapper>
